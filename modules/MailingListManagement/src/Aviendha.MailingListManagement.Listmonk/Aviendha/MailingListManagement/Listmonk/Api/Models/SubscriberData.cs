// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CPCA.Listmonk.Api.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SubscriberData : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The campaign_views property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CPCA.Listmonk.Api.Models.SubscriberData_campaign_views>? CampaignViews { get; set; }
#nullable restore
#else
        public List<global::CPCA.Listmonk.Api.Models.SubscriberData_campaign_views> CampaignViews { get; set; }
#endif
        /// <summary>The email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The link_clicks property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CPCA.Listmonk.Api.Models.SubscriberData_link_clicks>? LinkClicks { get; set; }
#nullable restore
#else
        public List<global::CPCA.Listmonk.Api.Models.SubscriberData_link_clicks> LinkClicks { get; set; }
#endif
        /// <summary>The profile property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CPCA.Listmonk.Api.Models.SubscriberProfile>? Profile { get; set; }
#nullable restore
#else
        public List<global::CPCA.Listmonk.Api.Models.SubscriberProfile> Profile { get; set; }
#endif
        /// <summary>The subscriptions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CPCA.Listmonk.Api.Models.Subscriptions>? Subscriptions { get; set; }
#nullable restore
#else
        public List<global::CPCA.Listmonk.Api.Models.Subscriptions> Subscriptions { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::CPCA.Listmonk.Api.Models.SubscriberData"/> and sets the default values.
        /// </summary>
        public SubscriberData()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CPCA.Listmonk.Api.Models.SubscriberData"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CPCA.Listmonk.Api.Models.SubscriberData CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CPCA.Listmonk.Api.Models.SubscriberData();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "campaign_views", n => { CampaignViews = n.GetCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.SubscriberData_campaign_views>(global::CPCA.Listmonk.Api.Models.SubscriberData_campaign_views.CreateFromDiscriminatorValue)?.AsList(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "link_clicks", n => { LinkClicks = n.GetCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.SubscriberData_link_clicks>(global::CPCA.Listmonk.Api.Models.SubscriberData_link_clicks.CreateFromDiscriminatorValue)?.AsList(); } },
                { "profile", n => { Profile = n.GetCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.SubscriberProfile>(global::CPCA.Listmonk.Api.Models.SubscriberProfile.CreateFromDiscriminatorValue)?.AsList(); } },
                { "subscriptions", n => { Subscriptions = n.GetCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.Subscriptions>(global::CPCA.Listmonk.Api.Models.Subscriptions.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.SubscriberData_campaign_views>("campaign_views", CampaignViews);
            writer.WriteStringValue("email", Email);
            writer.WriteCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.SubscriberData_link_clicks>("link_clicks", LinkClicks);
            writer.WriteCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.SubscriberProfile>("profile", Profile);
            writer.WriteCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.Subscriptions>("subscriptions", Subscriptions);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
