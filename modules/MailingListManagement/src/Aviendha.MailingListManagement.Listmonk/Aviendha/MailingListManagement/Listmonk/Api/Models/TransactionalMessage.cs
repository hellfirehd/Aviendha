// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CPCA.Listmonk.Api.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TransactionalMessage : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The content_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ContentType { get; set; }
#nullable restore
#else
        public string ContentType { get; set; }
#endif
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CPCA.Listmonk.Api.Models.TransactionalMessage_data? Data { get; set; }
#nullable restore
#else
        public global::CPCA.Listmonk.Api.Models.TransactionalMessage_data Data { get; set; }
#endif
        /// <summary>The from_email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FromEmail { get; set; }
#nullable restore
#else
        public string FromEmail { get; set; }
#endif
        /// <summary>The headers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CPCA.Listmonk.Api.Models.TransactionalMessage_headers>? Headers { get; set; }
#nullable restore
#else
        public List<global::CPCA.Listmonk.Api.Models.TransactionalMessage_headers> Headers { get; set; }
#endif
        /// <summary>The messenger property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Messenger { get; set; }
#nullable restore
#else
        public string Messenger { get; set; }
#endif
        /// <summary>The subscriber_email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubscriberEmail { get; set; }
#nullable restore
#else
        public string SubscriberEmail { get; set; }
#endif
        /// <summary>The subscriber_id property</summary>
        public int? SubscriberId { get; set; }
        /// <summary>The template_id property</summary>
        public int? TemplateId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::CPCA.Listmonk.Api.Models.TransactionalMessage"/> and sets the default values.
        /// </summary>
        public TransactionalMessage()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CPCA.Listmonk.Api.Models.TransactionalMessage"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CPCA.Listmonk.Api.Models.TransactionalMessage CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CPCA.Listmonk.Api.Models.TransactionalMessage();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "content_type", n => { ContentType = n.GetStringValue(); } },
                { "data", n => { Data = n.GetObjectValue<global::CPCA.Listmonk.Api.Models.TransactionalMessage_data>(global::CPCA.Listmonk.Api.Models.TransactionalMessage_data.CreateFromDiscriminatorValue); } },
                { "from_email", n => { FromEmail = n.GetStringValue(); } },
                { "headers", n => { Headers = n.GetCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.TransactionalMessage_headers>(global::CPCA.Listmonk.Api.Models.TransactionalMessage_headers.CreateFromDiscriminatorValue)?.AsList(); } },
                { "messenger", n => { Messenger = n.GetStringValue(); } },
                { "subscriber_email", n => { SubscriberEmail = n.GetStringValue(); } },
                { "subscriber_id", n => { SubscriberId = n.GetIntValue(); } },
                { "template_id", n => { TemplateId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("content_type", ContentType);
            writer.WriteObjectValue<global::CPCA.Listmonk.Api.Models.TransactionalMessage_data>("data", Data);
            writer.WriteStringValue("from_email", FromEmail);
            writer.WriteCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.TransactionalMessage_headers>("headers", Headers);
            writer.WriteStringValue("messenger", Messenger);
            writer.WriteStringValue("subscriber_email", SubscriberEmail);
            writer.WriteIntValue("subscriber_id", SubscriberId);
            writer.WriteIntValue("template_id", TemplateId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
