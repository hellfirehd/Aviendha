// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CPCA.Listmonk.Api.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Bounce_results : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The campaign property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CPCA.Listmonk.Api.Models.Bounce_results_campaign? Campaign { get; set; }
#nullable restore
#else
        public global::CPCA.Listmonk.Api.Models.Bounce_results_campaign Campaign { get; set; }
#endif
        /// <summary>The campaign_uuid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CampaignUuid { get; set; }
#nullable restore
#else
        public string CampaignUuid { get; set; }
#endif
        /// <summary>The created_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>The email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email { get; set; }
#nullable restore
#else
        public string Email { get; set; }
#endif
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The meta property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::CPCA.Listmonk.Api.Models.Bounce_results_meta? Meta { get; set; }
#nullable restore
#else
        public global::CPCA.Listmonk.Api.Models.Bounce_results_meta Meta { get; set; }
#endif
        /// <summary>The source property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Source { get; set; }
#nullable restore
#else
        public string Source { get; set; }
#endif
        /// <summary>The subscriber_id property</summary>
        public int? SubscriberId { get; set; }
        /// <summary>The subscriber_uuid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubscriberUuid { get; set; }
#nullable restore
#else
        public string SubscriberUuid { get; set; }
#endif
        /// <summary>The total property</summary>
        public int? Total { get; set; }
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::CPCA.Listmonk.Api.Models.Bounce_results"/> and sets the default values.
        /// </summary>
        public Bounce_results()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CPCA.Listmonk.Api.Models.Bounce_results"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CPCA.Listmonk.Api.Models.Bounce_results CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CPCA.Listmonk.Api.Models.Bounce_results();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "campaign", n => { Campaign = n.GetObjectValue<global::CPCA.Listmonk.Api.Models.Bounce_results_campaign>(global::CPCA.Listmonk.Api.Models.Bounce_results_campaign.CreateFromDiscriminatorValue); } },
                { "campaign_uuid", n => { CampaignUuid = n.GetStringValue(); } },
                { "created_at", n => { CreatedAt = n.GetStringValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "meta", n => { Meta = n.GetObjectValue<global::CPCA.Listmonk.Api.Models.Bounce_results_meta>(global::CPCA.Listmonk.Api.Models.Bounce_results_meta.CreateFromDiscriminatorValue); } },
                { "source", n => { Source = n.GetStringValue(); } },
                { "subscriber_id", n => { SubscriberId = n.GetIntValue(); } },
                { "subscriber_uuid", n => { SubscriberUuid = n.GetStringValue(); } },
                { "total", n => { Total = n.GetIntValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::CPCA.Listmonk.Api.Models.Bounce_results_campaign>("campaign", Campaign);
            writer.WriteStringValue("campaign_uuid", CampaignUuid);
            writer.WriteStringValue("created_at", CreatedAt);
            writer.WriteStringValue("email", Email);
            writer.WriteIntValue("id", Id);
            writer.WriteObjectValue<global::CPCA.Listmonk.Api.Models.Bounce_results_meta>("meta", Meta);
            writer.WriteStringValue("source", Source);
            writer.WriteIntValue("subscriber_id", SubscriberId);
            writer.WriteStringValue("subscriber_uuid", SubscriberUuid);
            writer.WriteIntValue("total", Total);
            writer.WriteStringValue("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
