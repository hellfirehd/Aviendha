// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CPCA.Listmonk.Api.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Settings : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The appBatch_size property</summary>
        public int? AppBatchSize { get; set; }
        /// <summary>The appCheck_updates property</summary>
        public bool? AppCheckUpdates { get; set; }
        /// <summary>The appConcurrency property</summary>
        public int? AppConcurrency { get; set; }
        /// <summary>The appearanceAdminCustom_css property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppearanceAdminCustomCss { get; set; }
#nullable restore
#else
        public string AppearanceAdminCustomCss { get; set; }
#endif
        /// <summary>The appearanceAdminCustom_js property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppearanceAdminCustomJs { get; set; }
#nullable restore
#else
        public string AppearanceAdminCustomJs { get; set; }
#endif
        /// <summary>The appearancePublicCustom_css property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppearancePublicCustomCss { get; set; }
#nullable restore
#else
        public string AppearancePublicCustomCss { get; set; }
#endif
        /// <summary>The appearancePublicCustom_js property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppearancePublicCustomJs { get; set; }
#nullable restore
#else
        public string AppearancePublicCustomJs { get; set; }
#endif
        /// <summary>The appEnable_public_archive property</summary>
        public bool? AppEnablePublicArchive { get; set; }
        /// <summary>The appEnable_public_subscription_page property</summary>
        public bool? AppEnablePublicSubscriptionPage { get; set; }
        /// <summary>The appFavicon_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppFaviconUrl { get; set; }
#nullable restore
#else
        public string AppFaviconUrl { get; set; }
#endif
        /// <summary>The appFrom_email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppFromEmail { get; set; }
#nullable restore
#else
        public string AppFromEmail { get; set; }
#endif
        /// <summary>The appLang property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppLang { get; set; }
#nullable restore
#else
        public string AppLang { get; set; }
#endif
        /// <summary>The appLogo_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppLogoUrl { get; set; }
#nullable restore
#else
        public string AppLogoUrl { get; set; }
#endif
        /// <summary>The appMax_send_errors property</summary>
        public int? AppMaxSendErrors { get; set; }
        /// <summary>The appMessage_rate property</summary>
        public int? AppMessageRate { get; set; }
        /// <summary>The appMessage_sliding_window property</summary>
        public bool? AppMessageSlidingWindow { get; set; }
        /// <summary>The appMessage_sliding_window_duration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppMessageSlidingWindowDuration { get; set; }
#nullable restore
#else
        public string AppMessageSlidingWindowDuration { get; set; }
#endif
        /// <summary>The appMessage_sliding_window_rate property</summary>
        public int? AppMessageSlidingWindowRate { get; set; }
        /// <summary>The appNotify_emails property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AppNotifyEmails { get; set; }
#nullable restore
#else
        public List<string> AppNotifyEmails { get; set; }
#endif
        /// <summary>The appRoot_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppRootUrl { get; set; }
#nullable restore
#else
        public string AppRootUrl { get; set; }
#endif
        /// <summary>The appSend_optin_confirmation property</summary>
        public bool? AppSendOptinConfirmation { get; set; }
        /// <summary>The appSite_name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AppSiteName { get; set; }
#nullable restore
#else
        public string AppSiteName { get; set; }
#endif
        /// <summary>The bounceAction property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BounceAction { get; set; }
#nullable restore
#else
        public string BounceAction { get; set; }
#endif
        /// <summary>The bounceCount property</summary>
        public int? BounceCount { get; set; }
        /// <summary>The bounceEnabled property</summary>
        public bool? BounceEnabled { get; set; }
        /// <summary>The bounceForwardemail_enabled property</summary>
        public bool? BounceForwardemailEnabled { get; set; }
        /// <summary>The bounceForwardemail_key property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BounceForwardemailKey { get; set; }
#nullable restore
#else
        public string BounceForwardemailKey { get; set; }
#endif
        /// <summary>The bounceMailboxes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CPCA.Listmonk.Api.Models.MailBoxBounces>? BounceMailboxes { get; set; }
#nullable restore
#else
        public List<global::CPCA.Listmonk.Api.Models.MailBoxBounces> BounceMailboxes { get; set; }
#endif
        /// <summary>The bouncePostmark_enabled property</summary>
        public bool? BouncePostmarkEnabled { get; set; }
        /// <summary>The bouncePostmark_password property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BouncePostmarkPassword { get; set; }
#nullable restore
#else
        public string BouncePostmarkPassword { get; set; }
#endif
        /// <summary>The bouncePostmark_username property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BouncePostmarkUsername { get; set; }
#nullable restore
#else
        public string BouncePostmarkUsername { get; set; }
#endif
        /// <summary>The bounceSendgrid_enabled property</summary>
        public bool? BounceSendgridEnabled { get; set; }
        /// <summary>The bounceSendgrid_key property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BounceSendgridKey { get; set; }
#nullable restore
#else
        public string BounceSendgridKey { get; set; }
#endif
        /// <summary>The bounceSes_enabled property</summary>
        public bool? BounceSesEnabled { get; set; }
        /// <summary>The bounceWebhooks_enabled property</summary>
        public bool? BounceWebhooksEnabled { get; set; }
        /// <summary>The messengers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CPCA.Listmonk.Api.Models.Settings_messengers>? Messengers { get; set; }
#nullable restore
#else
        public List<global::CPCA.Listmonk.Api.Models.Settings_messengers> Messengers { get; set; }
#endif
        /// <summary>The privacyAllow_blocklist property</summary>
        public bool? PrivacyAllowBlocklist { get; set; }
        /// <summary>The privacyAllow_export property</summary>
        public bool? PrivacyAllowExport { get; set; }
        /// <summary>The privacyAllow_preferences property</summary>
        public bool? PrivacyAllowPreferences { get; set; }
        /// <summary>The privacyAllow_wipe property</summary>
        public bool? PrivacyAllowWipe { get; set; }
        /// <summary>The privacyDomain_blocklist property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CPCA.Listmonk.Api.Models.Settings_privacyDomain_blocklist>? PrivacyDomainBlocklist { get; set; }
#nullable restore
#else
        public List<global::CPCA.Listmonk.Api.Models.Settings_privacyDomain_blocklist> PrivacyDomainBlocklist { get; set; }
#endif
        /// <summary>The privacyExportable property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? PrivacyExportable { get; set; }
#nullable restore
#else
        public List<string> PrivacyExportable { get; set; }
#endif
        /// <summary>The privacyIndividual_tracking property</summary>
        public bool? PrivacyIndividualTracking { get; set; }
        /// <summary>The privacyUnsubscribe_header property</summary>
        public bool? PrivacyUnsubscribeHeader { get; set; }
        /// <summary>The smtp property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CPCA.Listmonk.Api.Models.SMTPSettings>? Smtp { get; set; }
#nullable restore
#else
        public List<global::CPCA.Listmonk.Api.Models.SMTPSettings> Smtp { get; set; }
#endif
        /// <summary>The uploadFilesystemUpload_path property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadFilesystemUploadPath { get; set; }
#nullable restore
#else
        public string UploadFilesystemUploadPath { get; set; }
#endif
        /// <summary>The uploadFilesystemUpload_uri property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadFilesystemUploadUri { get; set; }
#nullable restore
#else
        public string UploadFilesystemUploadUri { get; set; }
#endif
        /// <summary>The uploadProvider property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadProvider { get; set; }
#nullable restore
#else
        public string UploadProvider { get; set; }
#endif
        /// <summary>The uploadS3Aws_access_key_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadS3AwsAccessKeyId { get; set; }
#nullable restore
#else
        public string UploadS3AwsAccessKeyId { get; set; }
#endif
        /// <summary>The uploadS3Aws_default_region property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadS3AwsDefaultRegion { get; set; }
#nullable restore
#else
        public string UploadS3AwsDefaultRegion { get; set; }
#endif
        /// <summary>The uploadS3Bucket property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadS3Bucket { get; set; }
#nullable restore
#else
        public string UploadS3Bucket { get; set; }
#endif
        /// <summary>The uploadS3Bucket_domain property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadS3BucketDomain { get; set; }
#nullable restore
#else
        public string UploadS3BucketDomain { get; set; }
#endif
        /// <summary>The uploadS3Bucket_path property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadS3BucketPath { get; set; }
#nullable restore
#else
        public string UploadS3BucketPath { get; set; }
#endif
        /// <summary>The uploadS3Bucket_type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadS3BucketType { get; set; }
#nullable restore
#else
        public string UploadS3BucketType { get; set; }
#endif
        /// <summary>The uploadS3Expiry property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadS3Expiry { get; set; }
#nullable restore
#else
        public string UploadS3Expiry { get; set; }
#endif
        /// <summary>The uploadS3Public_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadS3PublicUrl { get; set; }
#nullable restore
#else
        public string UploadS3PublicUrl { get; set; }
#endif
        /// <summary>The uploadS3Url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UploadS3Url { get; set; }
#nullable restore
#else
        public string UploadS3Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::CPCA.Listmonk.Api.Models.Settings"/> and sets the default values.
        /// </summary>
        public Settings()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CPCA.Listmonk.Api.Models.Settings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CPCA.Listmonk.Api.Models.Settings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CPCA.Listmonk.Api.Models.Settings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "app.batch_size", n => { AppBatchSize = n.GetIntValue(); } },
                { "app.check_updates", n => { AppCheckUpdates = n.GetBoolValue(); } },
                { "app.concurrency", n => { AppConcurrency = n.GetIntValue(); } },
                { "app.enable_public_archive", n => { AppEnablePublicArchive = n.GetBoolValue(); } },
                { "app.enable_public_subscription_page", n => { AppEnablePublicSubscriptionPage = n.GetBoolValue(); } },
                { "app.favicon_url", n => { AppFaviconUrl = n.GetStringValue(); } },
                { "app.from_email", n => { AppFromEmail = n.GetStringValue(); } },
                { "app.lang", n => { AppLang = n.GetStringValue(); } },
                { "app.logo_url", n => { AppLogoUrl = n.GetStringValue(); } },
                { "app.max_send_errors", n => { AppMaxSendErrors = n.GetIntValue(); } },
                { "app.message_rate", n => { AppMessageRate = n.GetIntValue(); } },
                { "app.message_sliding_window", n => { AppMessageSlidingWindow = n.GetBoolValue(); } },
                { "app.message_sliding_window_duration", n => { AppMessageSlidingWindowDuration = n.GetStringValue(); } },
                { "app.message_sliding_window_rate", n => { AppMessageSlidingWindowRate = n.GetIntValue(); } },
                { "app.notify_emails", n => { AppNotifyEmails = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "app.root_url", n => { AppRootUrl = n.GetStringValue(); } },
                { "app.send_optin_confirmation", n => { AppSendOptinConfirmation = n.GetBoolValue(); } },
                { "app.site_name", n => { AppSiteName = n.GetStringValue(); } },
                { "appearance.admin.custom_css", n => { AppearanceAdminCustomCss = n.GetStringValue(); } },
                { "appearance.admin.custom_js", n => { AppearanceAdminCustomJs = n.GetStringValue(); } },
                { "appearance.public.custom_css", n => { AppearancePublicCustomCss = n.GetStringValue(); } },
                { "appearance.public.custom_js", n => { AppearancePublicCustomJs = n.GetStringValue(); } },
                { "bounce.action", n => { BounceAction = n.GetStringValue(); } },
                { "bounce.count", n => { BounceCount = n.GetIntValue(); } },
                { "bounce.enabled", n => { BounceEnabled = n.GetBoolValue(); } },
                { "bounce.forwardemail_enabled", n => { BounceForwardemailEnabled = n.GetBoolValue(); } },
                { "bounce.forwardemail_key", n => { BounceForwardemailKey = n.GetStringValue(); } },
                { "bounce.mailboxes", n => { BounceMailboxes = n.GetCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.MailBoxBounces>(global::CPCA.Listmonk.Api.Models.MailBoxBounces.CreateFromDiscriminatorValue)?.AsList(); } },
                { "bounce.postmark_enabled", n => { BouncePostmarkEnabled = n.GetBoolValue(); } },
                { "bounce.postmark_password", n => { BouncePostmarkPassword = n.GetStringValue(); } },
                { "bounce.postmark_username", n => { BouncePostmarkUsername = n.GetStringValue(); } },
                { "bounce.sendgrid_enabled", n => { BounceSendgridEnabled = n.GetBoolValue(); } },
                { "bounce.sendgrid_key", n => { BounceSendgridKey = n.GetStringValue(); } },
                { "bounce.ses_enabled", n => { BounceSesEnabled = n.GetBoolValue(); } },
                { "bounce.webhooks_enabled", n => { BounceWebhooksEnabled = n.GetBoolValue(); } },
                { "messengers", n => { Messengers = n.GetCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.Settings_messengers>(global::CPCA.Listmonk.Api.Models.Settings_messengers.CreateFromDiscriminatorValue)?.AsList(); } },
                { "privacy.allow_blocklist", n => { PrivacyAllowBlocklist = n.GetBoolValue(); } },
                { "privacy.allow_export", n => { PrivacyAllowExport = n.GetBoolValue(); } },
                { "privacy.allow_preferences", n => { PrivacyAllowPreferences = n.GetBoolValue(); } },
                { "privacy.allow_wipe", n => { PrivacyAllowWipe = n.GetBoolValue(); } },
                { "privacy.domain_blocklist", n => { PrivacyDomainBlocklist = n.GetCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.Settings_privacyDomain_blocklist>(global::CPCA.Listmonk.Api.Models.Settings_privacyDomain_blocklist.CreateFromDiscriminatorValue)?.AsList(); } },
                { "privacy.exportable", n => { PrivacyExportable = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "privacy.individual_tracking", n => { PrivacyIndividualTracking = n.GetBoolValue(); } },
                { "privacy.unsubscribe_header", n => { PrivacyUnsubscribeHeader = n.GetBoolValue(); } },
                { "smtp", n => { Smtp = n.GetCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.SMTPSettings>(global::CPCA.Listmonk.Api.Models.SMTPSettings.CreateFromDiscriminatorValue)?.AsList(); } },
                { "upload.filesystem.upload_path", n => { UploadFilesystemUploadPath = n.GetStringValue(); } },
                { "upload.filesystem.upload_uri", n => { UploadFilesystemUploadUri = n.GetStringValue(); } },
                { "upload.provider", n => { UploadProvider = n.GetStringValue(); } },
                { "upload.s3.aws_access_key_id", n => { UploadS3AwsAccessKeyId = n.GetStringValue(); } },
                { "upload.s3.aws_default_region", n => { UploadS3AwsDefaultRegion = n.GetStringValue(); } },
                { "upload.s3.bucket", n => { UploadS3Bucket = n.GetStringValue(); } },
                { "upload.s3.bucket_domain", n => { UploadS3BucketDomain = n.GetStringValue(); } },
                { "upload.s3.bucket_path", n => { UploadS3BucketPath = n.GetStringValue(); } },
                { "upload.s3.bucket_type", n => { UploadS3BucketType = n.GetStringValue(); } },
                { "upload.s3.expiry", n => { UploadS3Expiry = n.GetStringValue(); } },
                { "upload.s3.public_url", n => { UploadS3PublicUrl = n.GetStringValue(); } },
                { "upload.s3.url", n => { UploadS3Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("app.batch_size", AppBatchSize);
            writer.WriteBoolValue("app.check_updates", AppCheckUpdates);
            writer.WriteIntValue("app.concurrency", AppConcurrency);
            writer.WriteStringValue("appearance.admin.custom_css", AppearanceAdminCustomCss);
            writer.WriteStringValue("appearance.admin.custom_js", AppearanceAdminCustomJs);
            writer.WriteStringValue("appearance.public.custom_css", AppearancePublicCustomCss);
            writer.WriteStringValue("appearance.public.custom_js", AppearancePublicCustomJs);
            writer.WriteBoolValue("app.enable_public_archive", AppEnablePublicArchive);
            writer.WriteBoolValue("app.enable_public_subscription_page", AppEnablePublicSubscriptionPage);
            writer.WriteStringValue("app.favicon_url", AppFaviconUrl);
            writer.WriteStringValue("app.from_email", AppFromEmail);
            writer.WriteStringValue("app.lang", AppLang);
            writer.WriteStringValue("app.logo_url", AppLogoUrl);
            writer.WriteIntValue("app.max_send_errors", AppMaxSendErrors);
            writer.WriteIntValue("app.message_rate", AppMessageRate);
            writer.WriteBoolValue("app.message_sliding_window", AppMessageSlidingWindow);
            writer.WriteStringValue("app.message_sliding_window_duration", AppMessageSlidingWindowDuration);
            writer.WriteIntValue("app.message_sliding_window_rate", AppMessageSlidingWindowRate);
            writer.WriteCollectionOfPrimitiveValues<string>("app.notify_emails", AppNotifyEmails);
            writer.WriteStringValue("app.root_url", AppRootUrl);
            writer.WriteBoolValue("app.send_optin_confirmation", AppSendOptinConfirmation);
            writer.WriteStringValue("app.site_name", AppSiteName);
            writer.WriteStringValue("bounce.action", BounceAction);
            writer.WriteIntValue("bounce.count", BounceCount);
            writer.WriteBoolValue("bounce.enabled", BounceEnabled);
            writer.WriteBoolValue("bounce.forwardemail_enabled", BounceForwardemailEnabled);
            writer.WriteStringValue("bounce.forwardemail_key", BounceForwardemailKey);
            writer.WriteCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.MailBoxBounces>("bounce.mailboxes", BounceMailboxes);
            writer.WriteBoolValue("bounce.postmark_enabled", BouncePostmarkEnabled);
            writer.WriteStringValue("bounce.postmark_password", BouncePostmarkPassword);
            writer.WriteStringValue("bounce.postmark_username", BouncePostmarkUsername);
            writer.WriteBoolValue("bounce.sendgrid_enabled", BounceSendgridEnabled);
            writer.WriteStringValue("bounce.sendgrid_key", BounceSendgridKey);
            writer.WriteBoolValue("bounce.ses_enabled", BounceSesEnabled);
            writer.WriteBoolValue("bounce.webhooks_enabled", BounceWebhooksEnabled);
            writer.WriteCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.Settings_messengers>("messengers", Messengers);
            writer.WriteBoolValue("privacy.allow_blocklist", PrivacyAllowBlocklist);
            writer.WriteBoolValue("privacy.allow_export", PrivacyAllowExport);
            writer.WriteBoolValue("privacy.allow_preferences", PrivacyAllowPreferences);
            writer.WriteBoolValue("privacy.allow_wipe", PrivacyAllowWipe);
            writer.WriteCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.Settings_privacyDomain_blocklist>("privacy.domain_blocklist", PrivacyDomainBlocklist);
            writer.WriteCollectionOfPrimitiveValues<string>("privacy.exportable", PrivacyExportable);
            writer.WriteBoolValue("privacy.individual_tracking", PrivacyIndividualTracking);
            writer.WriteBoolValue("privacy.unsubscribe_header", PrivacyUnsubscribeHeader);
            writer.WriteCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.SMTPSettings>("smtp", Smtp);
            writer.WriteStringValue("upload.filesystem.upload_path", UploadFilesystemUploadPath);
            writer.WriteStringValue("upload.filesystem.upload_uri", UploadFilesystemUploadUri);
            writer.WriteStringValue("upload.provider", UploadProvider);
            writer.WriteStringValue("upload.s3.aws_access_key_id", UploadS3AwsAccessKeyId);
            writer.WriteStringValue("upload.s3.aws_default_region", UploadS3AwsDefaultRegion);
            writer.WriteStringValue("upload.s3.bucket", UploadS3Bucket);
            writer.WriteStringValue("upload.s3.bucket_domain", UploadS3BucketDomain);
            writer.WriteStringValue("upload.s3.bucket_path", UploadS3BucketPath);
            writer.WriteStringValue("upload.s3.bucket_type", UploadS3BucketType);
            writer.WriteStringValue("upload.s3.expiry", UploadS3Expiry);
            writer.WriteStringValue("upload.s3.public_url", UploadS3PublicUrl);
            writer.WriteStringValue("upload.s3.url", UploadS3Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
