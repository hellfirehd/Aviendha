// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CPCA.Listmonk.Api.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class MailBoxBounces : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The auth_protocol property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthProtocol { get; set; }
#nullable restore
#else
        public string AuthProtocol { get; set; }
#endif
        /// <summary>The enabled property</summary>
        public bool? Enabled { get; set; }
        /// <summary>The host property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Host { get; set; }
#nullable restore
#else
        public string Host { get; set; }
#endif
        /// <summary>The port property</summary>
        public int? Port { get; set; }
        /// <summary>The return_path property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReturnPath { get; set; }
#nullable restore
#else
        public string ReturnPath { get; set; }
#endif
        /// <summary>The scan_interval property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ScanInterval { get; set; }
#nullable restore
#else
        public string ScanInterval { get; set; }
#endif
        /// <summary>The tls_enabled property</summary>
        public bool? TlsEnabled { get; set; }
        /// <summary>The tls_skip_verify property</summary>
        public bool? TlsSkipVerify { get; set; }
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The username property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Username { get; set; }
#nullable restore
#else
        public string Username { get; set; }
#endif
        /// <summary>The uuid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uuid { get; set; }
#nullable restore
#else
        public string Uuid { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::CPCA.Listmonk.Api.Models.MailBoxBounces"/> and sets the default values.
        /// </summary>
        public MailBoxBounces()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CPCA.Listmonk.Api.Models.MailBoxBounces"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CPCA.Listmonk.Api.Models.MailBoxBounces CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CPCA.Listmonk.Api.Models.MailBoxBounces();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "auth_protocol", n => { AuthProtocol = n.GetStringValue(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "host", n => { Host = n.GetStringValue(); } },
                { "port", n => { Port = n.GetIntValue(); } },
                { "return_path", n => { ReturnPath = n.GetStringValue(); } },
                { "scan_interval", n => { ScanInterval = n.GetStringValue(); } },
                { "tls_enabled", n => { TlsEnabled = n.GetBoolValue(); } },
                { "tls_skip_verify", n => { TlsSkipVerify = n.GetBoolValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "username", n => { Username = n.GetStringValue(); } },
                { "uuid", n => { Uuid = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("auth_protocol", AuthProtocol);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteStringValue("host", Host);
            writer.WriteIntValue("port", Port);
            writer.WriteStringValue("return_path", ReturnPath);
            writer.WriteStringValue("scan_interval", ScanInterval);
            writer.WriteBoolValue("tls_enabled", TlsEnabled);
            writer.WriteBoolValue("tls_skip_verify", TlsSkipVerify);
            writer.WriteStringValue("type", Type);
            writer.WriteStringValue("username", Username);
            writer.WriteStringValue("uuid", Uuid);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
