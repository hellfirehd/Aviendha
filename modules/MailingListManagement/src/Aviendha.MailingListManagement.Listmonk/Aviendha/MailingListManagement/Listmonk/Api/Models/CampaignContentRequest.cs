// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace CPCA.Listmonk.Api.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CampaignContentRequest : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The body property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Body { get; set; }
#nullable restore
#else
        public string Body { get; set; }
#endif
        /// <summary>The CampaignID property</summary>
        public int? CampaignID { get; set; }
        /// <summary>The clicks property</summary>
        public int? Clicks { get; set; }
        /// <summary>The content_type property</summary>
        public global::CPCA.Listmonk.Api.Models.CampaignContentRequest_content_type? ContentType { get; set; }
        /// <summary>The created_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedAt { get; set; }
#nullable restore
#else
        public string CreatedAt { get; set; }
#endif
        /// <summary>The from property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? From { get; set; }
#nullable restore
#else
        public string From { get; set; }
#endif
        /// <summary>The from_email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FromEmail { get; set; }
#nullable restore
#else
        public string FromEmail { get; set; }
#endif
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The lists property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::CPCA.Listmonk.Api.Models.CampaignContentRequest_lists>? Lists { get; set; }
#nullable restore
#else
        public List<global::CPCA.Listmonk.Api.Models.CampaignContentRequest_lists> Lists { get; set; }
#endif
        /// <summary>The messenger property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Messenger { get; set; }
#nullable restore
#else
        public string Messenger { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The send_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SendAt { get; set; }
#nullable restore
#else
        public string SendAt { get; set; }
#endif
        /// <summary>The sent property</summary>
        public int? Sent { get; set; }
        /// <summary>The started_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StartedAt { get; set; }
#nullable restore
#else
        public string StartedAt { get; set; }
#endif
        /// <summary>The status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>The subject property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subject { get; set; }
#nullable restore
#else
        public string Subject { get; set; }
#endif
        /// <summary>The tags property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags { get; set; }
#nullable restore
#else
        public List<string> Tags { get; set; }
#endif
        /// <summary>The template_id property</summary>
        public int? TemplateId { get; set; }
        /// <summary>The to property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? To { get; set; }
#nullable restore
#else
        public string To { get; set; }
#endif
        /// <summary>The to_send property</summary>
        public int? ToSend { get; set; }
        /// <summary>The type property</summary>
        public global::CPCA.Listmonk.Api.Models.CampaignContentRequest_type? Type { get; set; }
        /// <summary>The updated_at property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UpdatedAt { get; set; }
#nullable restore
#else
        public string UpdatedAt { get; set; }
#endif
        /// <summary>The uuid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uuid { get; set; }
#nullable restore
#else
        public string Uuid { get; set; }
#endif
        /// <summary>The views property</summary>
        public int? Views { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::CPCA.Listmonk.Api.Models.CampaignContentRequest"/> and sets the default values.
        /// </summary>
        public CampaignContentRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::CPCA.Listmonk.Api.Models.CampaignContentRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::CPCA.Listmonk.Api.Models.CampaignContentRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::CPCA.Listmonk.Api.Models.CampaignContentRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "body", n => { Body = n.GetStringValue(); } },
                { "CampaignID", n => { CampaignID = n.GetIntValue(); } },
                { "clicks", n => { Clicks = n.GetIntValue(); } },
                { "content_type", n => { ContentType = n.GetEnumValue<global::CPCA.Listmonk.Api.Models.CampaignContentRequest_content_type>(); } },
                { "created_at", n => { CreatedAt = n.GetStringValue(); } },
                { "from", n => { From = n.GetStringValue(); } },
                { "from_email", n => { FromEmail = n.GetStringValue(); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "lists", n => { Lists = n.GetCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.CampaignContentRequest_lists>(global::CPCA.Listmonk.Api.Models.CampaignContentRequest_lists.CreateFromDiscriminatorValue)?.AsList(); } },
                { "messenger", n => { Messenger = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "send_at", n => { SendAt = n.GetStringValue(); } },
                { "sent", n => { Sent = n.GetIntValue(); } },
                { "started_at", n => { StartedAt = n.GetStringValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "subject", n => { Subject = n.GetStringValue(); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "template_id", n => { TemplateId = n.GetIntValue(); } },
                { "to", n => { To = n.GetStringValue(); } },
                { "to_send", n => { ToSend = n.GetIntValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::CPCA.Listmonk.Api.Models.CampaignContentRequest_type>(); } },
                { "updated_at", n => { UpdatedAt = n.GetStringValue(); } },
                { "uuid", n => { Uuid = n.GetStringValue(); } },
                { "views", n => { Views = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("body", Body);
            writer.WriteIntValue("CampaignID", CampaignID);
            writer.WriteIntValue("clicks", Clicks);
            writer.WriteEnumValue<global::CPCA.Listmonk.Api.Models.CampaignContentRequest_content_type>("content_type", ContentType);
            writer.WriteStringValue("created_at", CreatedAt);
            writer.WriteStringValue("from", From);
            writer.WriteStringValue("from_email", FromEmail);
            writer.WriteIntValue("id", Id);
            writer.WriteCollectionOfObjectValues<global::CPCA.Listmonk.Api.Models.CampaignContentRequest_lists>("lists", Lists);
            writer.WriteStringValue("messenger", Messenger);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("send_at", SendAt);
            writer.WriteIntValue("sent", Sent);
            writer.WriteStringValue("started_at", StartedAt);
            writer.WriteStringValue("status", Status);
            writer.WriteStringValue("subject", Subject);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteIntValue("template_id", TemplateId);
            writer.WriteStringValue("to", To);
            writer.WriteIntValue("to_send", ToSend);
            writer.WriteEnumValue<global::CPCA.Listmonk.Api.Models.CampaignContentRequest_type>("type", Type);
            writer.WriteStringValue("updated_at", UpdatedAt);
            writer.WriteStringValue("uuid", Uuid);
            writer.WriteIntValue("views", Views);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
